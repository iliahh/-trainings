package main

import "fmt"

func main() {
	var n int

	//Считываем координаты 4 вершин квадрата и записываем в слайс
	coords := make([]float64, 8)

	for i := range 8 {
		fmt.Scan(&coords[i])
	}

	//Здесь вычисляем min и max по X и Y
	//Тут берется слайс с 8 числами, в нем для X берется X1 координаты,
	//для Y берутся Y1 координаты, а т.к. они чередуются (X и Y), то пишем
	//coords[0], потому что тут лежит введенный X1 и с него берем начальные minX и maxX,
	//а в coords[1] лежит Y1, соответственно берем для minY и maxY с него начальные значения.
	minX, maxX := coords[0], coords[0]
	minY, maxY := coords[1], coords[1]

	for i := 0; i < 8; i += 2 { //Работает по принципу "шагаем через 2",
		// где X выпадает в итоге на 0,2,4,6, а Y выпадает на 1,3,5,7,
		// таким образом получаем чередование введенных координат вершин
		X := coords[i]
		Y := coords[i+1]

		if X < minX {
			minX = X
		}
		if X > maxX {
			maxX = X
		}
		if Y < minY {
			minY = Y
		}
		if Y > maxY {
			maxY = Y
		}
	}

	//Считываем число исследуемых точек
	fmt.Scan(&n)

	//Проверяем все введенные точки
	for range n {
		var X, Y float64
		fmt.Scan(&X, &Y)

		//Здесь смотрим в "если", лежат ли наши точки в пределах наших значений квадрата,
		//их мы обозначили (предельные значения), когда искали min и max
		if X >= minX && X <= maxX && Y >= minY && Y <= maxY {
			fmt.Printf("Точка с координатами %.0f,%.0f принадлежит исследуемому квадрату\n", X, Y)
		} else {
			fmt.Printf("Точка с координатами %.0f,%.0f не принадлежит исследуемому квадрату\n", X, Y)
		}
	}

}
